#EditJavaProperties: Automatically generated file
#Fri Jan 05 03:48:35 GMT 2007
J2JX004=Internal Error\: CRC MISMATCH
J2JX003=Internal Error\: bad function argument
J2JX002=Precompiled %1$d of %2$d method(s) for target %3$s.
J2JX001=Stored resource\: %s
J2JX000=Attempted to add duplicate resource file [%s], file ignored.
J9RI019=jvmri->InjectOutOfMemory not supported.
J9RI018=jvmri->NotifySignal raising signal %d. 
J9RI017=Can't allocate dump agent in jvmri->SetOutOfMemoryHook, func not registered.
J9RI016=jvmri->SetOutOfMemoryHook called with null callback, func not registered.
J9RI015=jvmri->RunDumpRoutine\: componentId is out of bounds.
J9RI014=jvmri->RunDumpRoutine\: unable to retrieve component data.
J9RI013=jvmri->ReleaseRasInfo\: structure has unsupported type field.
J9RI012=jvmri->ReleaseRasInfo called with null RasInfo structure.
J9RI011=RasInfo structure has unsupported type field.
J9RI010=jvmri->GetRasInfo unable to alloc memory.
J9RI009=jvmri->GetRasInfo unable to alloc memory.
J9RI008=jvmri->GetRasInfo unable to get components.
J9RI007=jvmri->GetRasInfo unable to alloc memory.
J9RI006=jvmri->GetRasInfo called with null RasInfo structure.
J9RI005=jvmri->GetComponentDataArea component %s does not have dataArea under this vm.
J9RI004=jvmri->DynamicVerbosegc not supported.
J9RI003=Can't allocate dump agent in jvmri->DumpRegister, func not registered.
J9RI002=jvmri->DumpRegister called with null callback, func not registered.
J9RI001=Internal error removing dump agent in jvmri->DumpDeregister, func may not be deregistered.
J9RI000=jvmri->CreateThread cannot allocate thread args memory
JNCK091=Advice detected in handler frame of a JVMPI or JVMTI event\n
JNCK090=Warning detected in handler frame of a JVMPI or JVMTI event\n
JNCK089=Error detected in the handler frame of a JVMPI or JVMTI event\n
JNCK088=JNI warning in %1$s\: Argument \#%2$d is a weak reference. A weak reference may become NULL at any time. The reference should be promoted using NewLocalRef or NewGlobalRef and then compared to NULL before calling %3$s
JNCK087=JNI error in %1$s\: Argument \#%2$d is not a java/lang/reflect/Method or java/lang/reflect/Constructor
JNCK086=JNI warning in %1$s\: Argument \#%2$d is not a java/nio/Buffer. %3$s will return an error code
JNCK085=Advice detected in JNI_OnLoad of library %.*s\n
JNCK084=Warning detected in JNI_OnLoad of library %.*s\n
JNCK083=Error detected in JNI_OnLoad of library %.*s\n
JNCK082=Advice detected in the outermost frame of an attached thread\n
JNCK081=Warning detected in the outermost frame of an attached thread\n
PORT019=Unable to create directory %s.  Shared classes will be disabled until this directory is created.
JNCK080=Error detected in the outermost frame of an attached thread\n
PORT018=Operation Failed\: %1$d (%2$s failed\: %3$d)
PORT017=Operation Failed\: %d
PORT016=Internal Error %i
PORT015=Unable to resolve DLL references - a prerequisite DLL may be missing
PORT014=DLL not found
PORT013=DLL table not found
PORT012=Error\: 68K function has PACE bit set.
PORT011=Out of memory
PORT010=Permission denied
EXEL081=java version "%1$s/%2$s"
EXEL080=java version "%s"
JNCK079=Advice detected in %2$.*1$s.%4$.*3$s%6$.*5$s\n
JNCK078=Warning detected in %2$.*1$s.%4$.*3$s%6$.*5$s\n
JNCK077=Error detected in %2$.*1$s.%4$.*3$s%6$.*5$s\n
JNCK076=Internal jnichk error in %s\: Out of memory
JNCK075=Internal jnichk error in %1$s\: Unrecognized descriptor 0x%2$x
JNCK074=JNI advice in %s\: Buffer appears to be unmodified. Consider using JNI_ABORT instead of mode 0.
JNCK073=JNI advice in %1$s\: JNI_ABORT was specified, but cannot be honoured because data has been modified.\n(Original CRC\=0x%2$x, new CRC\=0x%3$x).\nSince %4$s returned the actual array contents, the changes will not be discarded. This may not be what you wanted.
ZIPS001=Unable to open %s (Missing export)
JNCK072=JNI advice in %1$s\: JNI_COMMIT was specified, but will be ignored.\nSince %2$s returned the actual array contents, the buffer will be invalid following this call. This may not be what you wanted.
ZIPS000=Unable to open %1$s (%2$s)
JNCK071=JNI warning\: Memory at 0x%1$p acquired by %2$s was not released before returning from native. This is probably a memory leak.
PORT009=File not found
JNCK070=JNI warning in %1$s\: Original array data was modified between %2$s and %3$s.\n(Original CRC\=0x%4$x, new CRC\=0x%5$x).\nSince %6$s returned a copy of the array contents, the new contents will be lost.
PORT008=Module architecture incorrect
PORT007=Not a module
PORT006=Module format incorrect
PORT005=Could not load module
PORT004=Symbol resolution failure
PORT003=Dependent module %s could not be loaded
PORT002=Unkown error loading shared library
PORT001=Failed to allocate memory.
EXEL079=\  -Xscmx<x>       \u5C07\u65B0\u7684\u5171\u7528\u985E\u5225\u5FEB\u53D6\u7684\u5927\u5C0F\u8A2D\u70BA <x>
EXEL078=\  -Xshareclasses[\:options]  \u555F\u7528\u985E\u5225\u8CC7\u6599\u5171\u7528\uFF08\u8ACB\u5229\u7528 help \u4F86\u67E5\u95B1\u8A73\u7D30\u8CC7\u6599\uFF09\n
EXEL077=\  -Xssi<x>        \u5C07 java \u57F7\u884C\u7DD2\u5806\u758A\u589E\u91CF\u8A2D\u70BA <x>
EXEL076=JIT  - %s\n
EXEL075=\  -Xquickstart    \u5EF6\u9072\u6700\u4F73\u5316\u4EE5\u7E2E\u77ED\u555F\u52D5\u6642\u9593
EXEL074=\u7121\u6CD5\u5C07\u4E3B\u63A7\u53F0 I/O \u91CD\u65B0\u5C0E\u5411\uFF1A%1$s\:%2$d
EXEL073=VM \u5167\u90E8\u932F\u8AA4\uFF1A\u7121\u6CD5\u5EFA\u7ACB Java VM
EXEL072=VM \u555F\u52D5\u932F\u8AA4\uFF1A\u8A18\u61B6\u9AD4\u4E0D\u8DB3
EXEL071=\u627E\u4E0D\u5230\u4E3B\u8981\u985E\u5225\u540D\u7A31
EXEL070=ROM \u5F71\u50CF\u7248\u672C\u932F\u8AA4
CDRT002=Failing PC\: %p (offset %p), metaData \= %p
JNCK069=JNI warning in %1$s\: End is out of range (%2$d + %3$d > %4$d)
CDRT001=Method\: %.*s.%.*s%.*s (%p)
JNCK068=JNI warning in %1$s\: Start or index is out of range (%2$d >\= %3$d)
CDRT000=Unable to locate JIT stack map - aborting VM
JNCK067=JNI warning in %1$s\: Negative region length (%2$d) specified
JNCK066=JNI warning in %1$s\: Negative start or index (%2$d) specified
JNCK065=JNI warning in %1$s\: Automatically grew local ref frame capacity from %2$d to %3$d. %4$d refs are in use.\nUse EnsureLocalCapacity or PushLocalFrame to explicitly grow the frame.
JNCK064=JNI warning in %1$s\: Automatically grew global weak ref pool capacity from %2$d to %3$d.\nThis may be an indicator of a memory leak.
JNCK063=JNI warning in %1$s\: Automatically grew global ref pool capacity from %2$d to %3$d.\nThis may be an indicator of a memory leak.
JNCK062=JNI warning in %s\: This function should not be called inside of a critical section
JNCK061=JNI warning in %1$s\: Argument \#%2$d is a malformed field signature ("%3$s")
JNCK060=JNI warning in %1$s\: Argument \#%2$d is a malformed method signature ("%3$s")
EXEL069=\u627E\u4E0D\u5230 ROM \u5F71\u50CF
EXEL068=VM \u5167\u90E8\u932F\u8AA4\uFF1A\u7121\u6CD5\u8A2D\u5B9A %s \u7684\u9663\u5217\u5143\u7D20
EXEL067=VM \u5167\u90E8\u932F\u8AA4\uFF1A\u7121\u6CD5\u5EFA\u7ACB\u5F15\u6578 %s \u7684 java/lang/String
EXEL066=VM \u5167\u90E8\u932F\u8AA4\uFF1A\u7121\u6CD5\u5EFA\u7ACB\u5F15\u6578 %s \u7684\u4F4D\u5143\u7D44\u9663\u5217
JDBG021=unrecognized debug option
EXEL065=VM \u5167\u90E8\u932F\u8AA4\uFF1A\u7121\u6CD5\u5EFA\u7ACB\u5F15\u6578\u9663\u5217
JDBG020=unrecognized debug option\: '%s'
EXEL064=main \u65B9\u6CD5\u5FC5\u9808\u5BA3\u544A\u70BA public\u3001static \u53CA void\u3002
EXEL063=\u985E\u5225 %s \u672A\u5BE6\u4F5C main()
EXEL062=VM \u5167\u90E8\u932F\u8AA4\uFF1A\u5C07\u985E\u5225\u540D\u7A31 %s \u7684\u5B57\u4E32\u8F49\u63DB\u6210 UTF \u5B57\u5143\u6642\u8A18\u61B6\u9AD4\u4E0D\u8DB3
EXEL061=VM \u5167\u90E8\u932F\u8AA4\uFF1A\u7121\u6CD5\u5EFA\u7ACB\u985E\u5225\u540D\u7A31 %s \u7684 java/lang/String
EXEL060=VM \u5167\u90E8\u932F\u8AA4\uFF1A\u7121\u6CD5\u5EFA\u7ACB\u985E\u5225\u540D\u7A31 %s \u7684\u4F4D\u5143\u7D44\u9663\u5217
JNCK059=JNI warning in %1$s\: Argument \#%2$d is a malformed identifier ("%3$s")
JNCK058=JNI warning in %1$s\: After calling %2$s, you must check for exceptions using ExceptionCheck, ExceptionClear or ExceptionOccurred before calling %3$s
JNCK057=JNI error in %1$s\: Do not use %2$s to release memory 0x%3$p acquired using %4$s
JNCK056=JNI error in %1$s\: Got memory 0x%2$p from object 0x%3$p, releasing from 0x%4$p
JNCK055=JNI error in %1$s\: Pointer 0x%2$p was not returned by any JNI function, or was already released
JNCK054=JNI error in %1$s\: Unrecognized mode option %2$d
JNCK053=JNI error\: Critical section must be released before function returns
JNCK052=JNI error in %1$s\: Class %3$.*2$s is obsolete
JNCK051=Internal VM error in %1$s\: Pushed bytes %2$p is smaller than JNI ref bytes %3$p
JNCK050=JNI error in %s\: PopLocalFrame called without a local frame on the stack
JDBG019=unsorted relocation list %zx
JDBG018=ignoring unrecognized debug option
JDBG017=ignoring unrecognized debug option\: '%s'
JDBG016=jvm attach failed
JDBG015=Debug response server
EXEL059=VM \u5167\u90E8\u932F\u8AA4\uFF1A\u627E\u4E0D\u5230\u985E\u5225 java/lang/String
JDBG014=cannot allocate vm->debuggerClassReferences pool
EXEL058=VM \u5167\u90E8\u932F\u8AA4\uFF1A\u8A18\u61B6\u9AD4\u4E0D\u8DB3
JDBG013=cannot allocate vm->debuggerReferences pool
EXEL057=java "1.3.0" \u7248\n
JDBG012=j9dbg_init_server failed
EXEL056=IBM \u662F IBM Corp \u7684\u8A3B\u518A\u5546\u6A19\u3002\nJava \u53CA\u6240\u6709 Java \u578B\u6A19\u8A18\u548C\u5546\u6A19\u662F Sun Microsystems, Inc. \u7684\n\u5546\u6A19\u6216\u8A3B\u518A\u5546\u6A19\u3002\n
JDBG011=cannot allocate debugServer
EXEL055=\u76EE\u6A19\uFF1A%s
JDBG010=Example\: java -Xrunjdwp\:transport\=dt_socket,address\=localhost\:8000\n
EXEL054=(c) Copyright IBM Corp. 1991, %s  All Rights Reserved
EXEL053=Licensed Materials - Property of IBM\n\nJ9 - VM for the Java(TM) platform, Version %s
EXEL052=\n\u8B66\u544A\uFF1A\u5DF2\u66F4\u63DB\u6307\u4EE4\u884C\u5F15\u6578 "%s"\u3002\n\u8B66\u544A\uFF1A\u8ACB\u4F7F\u7528 -X \u540C\u7B49\u7528\u6CD5\u3002
EXEL051=\n\u8B66\u544A\uFF1A\u5DF2\u66F4\u63DB\u6307\u4EE4\u884C\u5F15\u6578 "%s"\u3002\n\u8B66\u544A\uFF1A\u8ACB\u4F7F\u7528 "-classpath <path>" \u6216 "-cp <path>"\u3002
EXEL050=\  -Xrdbginfo\:<host>\:<port>      \u555F\u7528\u8CC7\u8A0A\u4F3A\u670D\u5668\u9060\u7AEF\u9664\u932F
J9VM044=Monitor cache limit exceeded
J9VM043=Major version
J9VM042=Fatal error\: JXE Major version different than %d
J9VM041=wrong number of arguments
JNCK049=JNI error in %s\: va_list reuse detected
J9VM040=OS stack overflow
JNCK048=JNI error in %s\: Ineligible receiver
JNCK047=JNI error in %s\: Incorrect clazz argument
JNCK046=JNI error in %1$s\: Method has wrong return type ('%2$c')
JNCK045=JNI error in %s\: Method is not static
JNCK044=JNI error in %s\: Method is static
JNCK043=JNI error in %1$s\: Argument \#%2$d; unable to find %3$s
JNCK042=JNI error in %1$s\: Argument \#%2$d is not a subclass of %3$s
JNCK041=JNI error in %1$s\: Argument \#%2$d is out of range for a %3$s (0x%4$x > 0x%5$x)
JNCK040=JNI error in %1$s\: Argument \#%2$d is out of range for a %3$s (0x%4$x < 0x%5$x)
JDBG009=j9methodids\=y|n                 use j9 method ids               n\n
JDBG008=onuncaught\=y|n                  debug on any uncaught?          n
JDBG007=onthrow\=<exception name>        debug on throw                  none
JDBG006=server\=y|n                      listen for debugger?            n
JDBG005=address\=<listen/attach address> transport spec                  "localhost\:8888"
EXEX022=Unable to load rom image from jxe.
EXEL049=\  -Xdbginfo\:<symbol file path>  \u555F\u7528\u8CC7\u8A0A\u4F3A\u670D\u5668\u9664\u932F
JDBG004=transport\=<name>                transport spec                  none
EXEX021=Error loading jxe relocator\: %1$s (%2$s)
EXEL048=\  -Xrunjdwp\:<options>           \u555F\u7528\u9664\u932F\uFF0CJDWP \u6A19\u6E96\u9078\u9805
JDBG003=suspend\=y|n                     wait on startup?                y
EXEX020=Missing required export
EXEL047=\n  -Xdbg\:<options>               \u555F\u7528\u9664\u932F\uFF0CJDWP \u6A19\u6E96\u9078\u9805
JDBG002=---------------------           -----------                     -------
EXEL046=\  -Xlp                          \u555F\u7528\u5927\u578B\u5206\u9801\u652F\u63F4
JDBG001=Option Name and Value           Description                     Default
JITM000=Unsupported Hardware [%d].
EXEL045=\  -Xnocompactgc                 \u505C\u7528\u58D3\u7E2E
JDBG000=-Xrunjdwp usage\: -Xrunjdwp\:[help]|[<option>\=<value>, ...]\n
EXEL044=\  -Xcompactgc                   \u555F\u7528\u58D3\u7E2E
DUMP021=Multiple heapdumps were requested but %%id is missing from file label\: dumps will overwrite
J9VM039=-Xscmx is ignored if -Xshareclasses is not specified
EXEL043=\  -Xcompactexplicitgc           \u6BCF\u4E00\u6B21\u7CFB\u7D71 GC \u6642\u555F\u7528\u58D3\u7E2E
DUMP020=%s Dump has been written
IREL001=Fatal error\: JXE %s.jar generated by a non real time JVM cannot be run by a real time JVM
J9VM038=-Xthr\: unrecognized option --> '%s'
EXEL042=\  -Xnocompactexplicitgc         \u7CFB\u7D71 GC \u6642\u505C\u7528\u58D3\u7E2E
IREL000=AOT code from %s.jar generated with %s VM doesn't run with %s VM.
J9VM037=Failed to allocate monitor
EXEL041=\  -Xalwaysclassgc               \u6BCF\u4E00\u6B21 GC \u6642\u555F\u7528\u52D5\u614B\u985E\u5225\u5378\u8F09
J9VM036=/ by zero
EXEL040=\  -Xclassgc                     \u555F\u7528\u52D5\u614B\u985E\u5225\u5378\u8F09
J9VM035=Unable to allocate OutOfMemoryError
J9VM034=jvmri requires trace engine\: run with -Xtrace flag
J9VM033=Fatal error\: failed to initialize %s
J9VM032=Fatal error\: unable to load %1$s\: %2$s
J9VM031=Required class %2$.*1$s must be in the boot classpath, but was found in the application class path in %4$.*3$s
JNCK039=JNI error in %1$s\: Argument \#%2$d is NULL
J9VM030=Invalid UTF8 used in JNI function
JNCK038=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a valid object reference. It's type is\: %4$s\n
JNCK037=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a local reference. Its type is\: %4$s
JNCK036=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a weak global reference. Its type is\: %4$s
JNCK035=JNI error in %1$s\: Argument \#%2$d (0x%3$p) is not a global reference. Its type is\: %4$s
JNCK034=JNI error in %1$s\: Argument \#%2$d is not a %3$s
JNCK033=JNI error in %1$s\: Argument \#%2$d is not a jarray
JNCK032=JNI error in %1$s\: Argument \#%2$d is not a jobjectArray
JNCK031=JNI error in %1$s\: Argument \#%2$d is NULL
EXEX019=Logical mapped addr\=0x%1$X for physical address at 0x%2$X and size 0x%3$X
JNCK030=JNI error in %s\: This function cannot be called while GC is disabled (it was probably called from a JVMPI or JVMTI event)
EXEX018=jxeaddr location 0x%1$08X outside of range 0x%2$08X to 0x%3$08X
EXEX017=Error mapping jxe in flash
EXEX016=Invalid jxespace parameters.
EXEX015=VM startup error\: Out of memory
DUMP019=JVM Requesting %s Dump
EXEX014=Run %s -help for usage
DUMP018=Requested event is not available\: run with -Xdump\:dynamic flag
EXEX013=Internal VM error\: Failed to create Java VM
DUMP017=Aborting\: Cannot compress file (%s)
EXEX012=-jar option is not available for this class library
EXEL039=\  -Xnoclassgc                   \u505C\u7528\u52D5\u614B\u985E\u5225\u5378\u8F09
DUMP016=Aborting\: Cannot create file (%s)
EXEL038=\  -Xgcthreads<x>                \u8A2D\u5B9A GC \u57F7\u884C\u7DD2\u6578\u76EE
DUMP015=Aborting\: Cannot open or read (%s)
EXEX010=%s requires a parameter
EXEL037=\n\u4E0B\u5217\u9078\u9805\u7684\u5F15\u6578\u4EE5\u5341\u9032\u4F4D\u6578\u8868\u793A\u3002\n
DUMP014=VM Action unrecognised\: ...%s
EXEL036=\  -Xmaxf<x>       GC \u4E4B\u5F8C\u8CC7\u6599\u5806\u53EF\u7528\u7684\u6700\u5927\u767E\u5206\u6BD4
DUMP013=Processed Dump Event "%1$s", detail "%3$.*2$s".
EXEL035=\  -Xminf<x>       GC \u4E4B\u5F8C\u8CC7\u6599\u5806\u53EF\u7528\u7684\u6700\u5C0F\u767E\u5206\u6BD4
DUMP012=Error in %1$s Dump\: %2$s
EXEL034=\u503C 0.3 \u4EE3\u8868 30%% \u7684\u8981\u6C42\n
DUMP011=%1$s Dump spawned process %2$d
J9VM029=\tat (Unknown Method)
EXEL033=\n\u4E0B\u5217\u9078\u9805\u7684\u5F15\u6578\u4EE5 0 \u5230 1 \u7684\u5C0F\u9EDE\u8868\u793A\u3002
DUMP010=%1$s Dump written to %2$s
J9VM028=\tat %2$.*1$s.%4$.*3$s (%6$.*5$s\:%7$u)
EXEL032=\  -Xmaxe<x>       \u5C07\u8CC7\u6599\u5806\u64F4\u5145\u7684\u5927\u5C0F\u4E0A\u9650\u8A2D\u70BA <x>
J9VM027=\tat %2$.*1$s.%4$.*3$s (%6$.*5$s)
EXEL031=\  -Xmine<x>       \u5C07\u8CC7\u6599\u5806\u64F4\u5145\u7684\u6700\u5C0F\u5927\u5C0F\u8A2D\u70BA <x>
J9VM026=\tat %2$.*1$s.%4$.*3$s (Unknown Source)
EXEL030=\  -Xss<x>         \u5C07\u57F7\u884C\u7DD2\u5806\u758A\u5927\u5C0F\u8A2D\u70BA <x>
J9VM025=\tat %2$.*1$s.%4$.*3$s (Native Method)
J9VM024=Exception in thread "%.*s" 
J9VM023=This may indicate that JAVA_HOME is incorrect, or that class libraries are not installed
J9VM022=Stack map failed, result \= %p - aborting VM
J9VM021=Out of memory for interpreter stack map - aborting VM
JNCK029=JNI error in %s\: This function cannot be called inside of a critical section
J9VM020=Searched in %.*s
JNCK028=JNI error in %s\: This function cannot be called when an exception is pending
JNCK027=JNI error in %s\: env is not the JNIEnv* for the active thread
JNCK026=JNI error in %s\: env does not appear to be a valid thread, or memory has been corrupted, or this is not a J9 virtual machine
JNCK025=Use -Xcheck\:jni\:nonfatal to continue running when errors are detected.
JNCK024=JNI error detected. Aborting.
JNCK023=JNI error detected. Continuing...
JNCK022=freed local reference(?)
JNCK021=local reference in another thread
J2SE000=\n
EXEX009=\  -verify          enable class file verification.\n  -X               print help on non-standard options.
JNCK020=debugger reference
EXEX008=\  -verbose[\:class,gc,stack,sizes]\n                   enable verbose output (default\=class).\n
EXEX007=\  -jcl\:<config>[\:options]\n                   specify which JCL DLL to use (e.g. cdc, cldc, ...).\n
EXEX006=\  -debug\:<options> enable debug, JDWP standard <options>.\n
EXEX005=\  -D<prop>\=<val>   set the value of a system property.\n
DUMP009=%s Dump not available
EXEX004=\  -jxespace\:<physicalAddr>,<size>,<logicalAddr>\n                   map memory region for jxes, (values are in hex).\n  -jxeaddr\:<logicalAddr>\n                   run a jxe directly from memory, (address is in hex).
DUMP008=using '%s'
EXEX003=\  -jxe\:<jxeFile>   run the named jxe file.
DUMP007=JVM Requesting %1$s Dump using '%2$s'
EXEX002=\n[options]\n  -classpath <path>\n  -cp <path>       set classpath to <path>.
EXEL029=\  -Xss<x>         \u5C07\u6700\u5927 java \u57F7\u884C\u7DD2\u5806\u758A\u5927\u5C0F\u8A2D\u70BA <x>
DUMP006=Processing Dump Event "%1$s", detail "%3$.*2$s" - Please Wait.
EXEX001=Usage\:\t%s [options] -jxe\:<jxeFile> [args...]
EXEL028=\  -Xiss<x>        \u5C07\u8D77\u59CB java \u57F7\u884C\u7DD2\u5806\u758A\u5927\u5C0F\u8A2D\u70BA <x>
DUMP005=Missing Executable
EXEX000=Usage\:\t%s [options] classname [args...]
EXEL027=\  -Xmso<x>        \u5C07 OS \u57F7\u884C\u7DD2\u5806\u758A\u5927\u5C0F\u8A2D\u70BA <x>
DUMP004=Missing Filename
EXEL026=\  -Xmrx<x>        \u5C07\u8A18\u61B6\u96C6\u7684\u5927\u5C0F\u4E0A\u9650\u8A2D\u70BA <x>
DUMP003=Named Dump unrecognised\: %s
EXEL025=\  -Xmr<x>         \u5C07\u8A18\u61B6\u96C6\u5927\u5C0F\u8A2D\u70BA <x>
DUMP002=Label Field unrecognised\: %%%1$c
EXEL024=\  -Xmx<x>         \u5C07\u8A18\u61B6\u9AD4\u6700\u5927\u503C\u8A2D\u70BA <x>
DUMP001=Dump Event unrecognised\: ...%s
J9VM019=Fatal error\: Unable to find and initialize required class %.*s
EXEL023=\  -Xms<x>         \u5C07\u8D77\u59CB\u8A18\u61B6\u9AD4\u5927\u5C0F\u8A2D\u70BA <x>
DUMP000=Dump Option unrecognised\: -Xdump\:%s
J9VM018=Could not allocate memory for DLL load table pool
EXEL022=\  -Xms<x>         \u5C07\u820A\u7A7A\u9593\u5927\u5C0F\u8A2D\u70BA <x>
J9VM017=Could not allocate memory for command line option array
EXEL021=\  -Xmoi<x>        \u5C07\u820A\u7A7A\u9593\u589E\u91CF\u8A2D\u70BA <x>
J9VM016=Shutdown error for library %1$s(%2$d)\: %3$s
EXEL020=\  -Xmox<x>        \u5C07\u6700\u5927\u820A\u7A7A\u9593\u5927\u5C0F\u8A2D\u70BA <x>
J9VM015=Initialization error for library %1$s(%2$d)\: %3$s
J9VM014=Shutdown error in function %1$s(%2$d)\: %3$s
J9VM013=Initialization error in function %1$s(%2$d)\: %3$s
J9VM012=Unable to unload %1$s\: %2$s
J9VM011=Unable to load %1$s\: %2$s
JNCK019=weak global reference
JNCK018=global reference
J9VM010=Failed to initialize %s
JNCK017=local reference
JNCK016=NULL
JNCK015=\thelp           print this screen
JNCK014=\tpedantic       perform more thorough, but slower checks
JNCK013=\tnovalist       don't check for va_list reuse
JNCK012=\tnoadvice       don't display advice
JNCK011=\tnowarn         don't display warnings
JNCK010=\tnonfatal       don't exit when errors are detected
JVMP000=Attempt to instrument %.*s through JVMPI was disallowed
EXEL019=\  -Xmos<x>        \u5C07\u8D77\u59CB\u820A\u7A7A\u9593\u5927\u5C0F\u8A2D\u70BA <x>
EXEL018=\  -Xmo<x>         \u5C07\u8D77\u59CB/\u6700\u5927\u820A\u7A7A\u9593\u5927\u5C0F\u8A2D\u70BA <x>
EXEL017=\  -Xmo<x>         \u5C07\u820A\u7A7A\u9593\u5927\u5C0F\u8A2D\u70BA <x>
EXEL016=\  -Xmnx<x>        \u5C07\u6700\u5927\u65B0\u7A7A\u9593\u5927\u5C0F\u8A2D\u70BA <x>
EXEL015=\  -Xmns<x>        \u5C07\u8D77\u59CB\u65B0\u7A7A\u9593\u5927\u5C0F\u8A2D\u70BA <x>
EXEL014=\  -Xmn<x>         \u5C07\u8D77\u59CB/\u6700\u5927\u65B0\u7A7A\u9593\u5927\u5C0F\u8A2D\u70BA <x>
J9VM009=J9VMDllMain failed
EXEL013=\  -Xmn<x>         \u5C07\u65B0\u7A7A\u9593\u5927\u5C0F\u8A2D\u70BA <x>
J9VM008=J9VMDllMain not found
EXEL012=\  -Xmco<x>        \u5C07 ROM \u985E\u5225\u5340\u6BB5\u589E\u91CF\u8A2D\u70BA <x>
J9VM007=Command-line option unrecognised\: %s
EXEL011=\  -Xmca<x>        \u5C07 RAM \u985E\u5225\u5340\u6BB5\u589E\u91CF\u8A2D\u70BA <x>
J9VM006=Invalid command-line option\: %s
EXEL010=\u5C3E\u7AEF\u9644\u52A0 "k" (kilo) \u6216 "m" (mega) \u7684\u503C\u5C07\u9069\u7576\u5730\u63DB\u7B97\u3002\n
J9VM005=Invalid value for environment variable\: %s
J9VM004=Cannot load library required by\: %s
J9VM003=JIT compiler "%s" not found. Will use interpreter.
J9VM002=Options file not found
J9VM001=Malformed value for -Xservice
JNCK009=\tnobounds       don't perform bounds checking on strings and arrays
J9VM000=Malformed value for IBM_JAVA_OPTIONS
JNCK008=\ttrace          trace all JNI functions
JNCK007=\tverbose        trace certain JNI functions and activities
JNCK006=\tall            check application and system classes
JNCK005=Usage\: -Xcheck\:jni\:[option[,option[,...]]]
JNCK004=jnichk - JNI Check utility for J9, Version %s
JNCK003=JNI check utility\: unable to allocate VM local storage
JNCK002=JNI check utility\: unable to hook event
JNCK001=JNI check utility installed. Use -Xcheck\:jni\:help for usage
JNCK000=-Xcheck\:jni\: unrecognized option --> '%s'
EXEL009=\n\u4E0B\u5217\u9078\u9805\u7684\u5F15\u6578\u4EE5\u4F4D\u5143\u7D44\u8868\u793A\u3002
EXEL008=\  -Xfuture        \u555F\u7528\u6700\u56B4\u683C\u6AA2\u67E5\uFF0C\u9810\u671F\u672A\u4F86\u9810\u8A2D\u503C
EXEL007=\  -Xnoaot         \u4E0D\u57F7\u884C\u7D93\u904E\u524D\u7F6E\u7DE8\u8B6F\u7684\u7A0B\u5F0F\u78BC
EXEL006=\  -Xnojit         \u505C\u7528 JIT
EXEL005=\  -Xint           \u50C5\u57F7\u884C\u5DF2\u89E3\u8B6F\u7684\u7A0B\u5F0F\u78BC\uFF08\u76F8\u7576\u65BC -Xnojit -Xnoaot\uFF09
EXEL004=\n  -Xrun<dll>[\:options]      \u555F\u52D5 JVMPI \u6548\u80FD\u5206\u6790\n
EXEL003=\  -Xbootclasspath/a\:<path>  \u5728 bootstrap \u985E\u5225\u8DEF\u5F91\u5F8C\u9762\u9644\u52A0 <path>
EXEL002=\  -Xbootclasspath/p\:<path>  \u5728 bootstrap \u985E\u5225\u8DEF\u5F91\u524D\u9762\u63D2\u5165 <path>
EXEL001=\  -Xbootclasspath\:<path>    \u5C07 bootstrap \u985E\u5225\u8DEF\u5F91\u8A2D\u70BA <path>
EXEL000=\u4E0B\u5217\u9078\u9805\u4E0D\u662F\u6A19\u6E96\u9078\u9805\uFF0C\u53EF\u80FD\u96A8\u6642\u8B8A\u52D5\u3002\n
J9CL014=%1$s\: unrecognized option --> '%2$s'
J9CL013=Failed to allocate OS monitor
J9CL011=Failed to fork OS thread
J9CL010=Failed to allocate JNIEnv
J9CL009=Thread already started
J9CL008=nanosecond timeout value out of range
J9CL007=timeout value is negative
J9CL006=No pre-verify data for java/lang/Object
J9CL005=Incompatible class library version\: requires VM v%1$i, found v%2$i
J9CL004=Incompatible class library version\: expected JCL v%1$i, found v%2$i
J9CL003=Incompatible class library version\: JCL %1$x, VM %2$x
J9CL002=Classes are from a non-J9 library, or an incorrectly reduced JXE
J9CL001=Try running with -jcl\:%s
J9CL000=Incompatible class library
J2JX099=Incomplete option(s) on command line. First was\: %s
J2JX098=Invalid argument [%1$s] for option\: %2$s
J2JX097=Unrecognized option(s) on command line. First was\: %s
J2JX096=Failed to find function j9bcv_verifyCreateStackAttributes
J2JX095=Failed to find function j9bcv_verifyClassStructure
J2JX094=Failed to open verifier DLL %1$s\: %2$s
J2JX093=No class files specified on the command line
J2JX092=Internal error with newly created VM
J2JX091=Successfully created the Java VM
J2JX090=Attempting to create a Java VM for use with AOT
J9GC057="Metronome policy is not allowed without -Xrealtime"
J9GC056=scoped memory space maximum size
J9GC055=immortal memory space size
J2JX089=Internal Error\: could not find %1$s in %2$s
J9GC054=memory maximum
J2JX088=Internal Error\: failed to open %1$s\: %2$s
J9GC053=ROM class segment increment
J2JX087=Internal Error\: could not determine executable name
J9GC052=RAM class segment increment
J2JX086=Wrote %1$i bytes to symbol file %2$s
J9GC051=soft memory maximum
J2JX085=Internal Error\: unsupported error code from create rom class %d
J9GC050=remembered set size
J2JX084=Closing segment %d and starting a new segment
J2JX083=Including %s in AOT
J2JX082=Excluding %s from AOT
J2JX081=Error\: %s
J2JX080=Verification error in method %1$i (%3$.*2$s%5$.*4$s) at PC %6$i
J9GC049=old space increment
J9GC048=maximum old space size
J9GC047=initial old space size
J9GC046=initial memory size
J9GC045=maximum new space size
J2JX079=Error\: %1$s at %2$i
J9GC044=initial new space size
J2JX078=Recommended action\:
J2JX110=The JAR file %s has already been converted
J9GC043=Sum of %1$s and %2$s too small for %3$s
J2JX077=Invalid class file
J9GC042=Unknown fvtest type\: %s
J2JX076=Invalid class file\: %s
J9GC041=Unknown option\: %s
J2JX075=Entry name too long\: %s
J9GC040=*** %1$s deprecated\: use %2$s instead ***
J2JX074=Attempted to add duplicate entry to JXE\: %s
J2JX073=dir processing file\: %s
J2JX072=Could not open directory %s
J2JX071=Processing directory\: %s
J2JX070=increasing space to\: %i bytes
J2JX109=\  -E xxx\=yyy                set system property xxx to value of environment variable yyy at runtime
J2JX108=\  -g[\:lines,source,vars]    generate a subset (lines, source, and/or vars) of debugging information inside of JXE
J2JX107=\  -g\:nosym                  embed debugging information inside JXE
J2JX106=\  -g\:sym                    generate a .sym file for debugging, no debugging information inside of JXE
J9GC039=%s value specified is too large
J2JX105=\  -nog                      generate no debugging information for JXE
J9GC038=%1$s not supported with values other than %2$zu
J2JX104=\  -g                        same as -g\:sym
J9GC037=%1$s value must be above %2$zu
J2JX103=Could not compile method\: %2$.*1$s/%4$.*3$s%6$.*5$s jitErr 0%7$x
J9GC036=%s must be followed by a number
J2JX102=Could not compile native method\: %2$.*1$s/%4$.*3$s%6$.*5$s
J9GC035=%1$s value must be between %2$zu and %3$zu (inclusive)
J2JX069=estimated memory size\: %i bytes
J2JX101=Could not compile abstract method\: %2$.*1$s/%4$.*3$s%6$.*5$s
J9GC034=%1$s value must be between %2$f and %3$f (inclusive)
J2JX068=file size\: %i bytes
J2JX100=%s is not supported in this configuration
J9GC033=System configuration does not support option '%s'
J2JX067=No valid class found in %s
J9GC032=Option error\: '%1$s' and '%2$s' cannot both be specified
J2JX066=Could not open file\: %s
J9GC031=%1$s value of %2$f must be at least %3$s less than %4$s value of %5$f
J2JX065=Error closing zip file\: %s
J9GC030=Option error\: '%s'
J2JX064=The valid values for the -precompileTarget option are\:
J2JX063=Defaults are\:
J2JX062=classfile(s)                any number of files ending with .class, .jar, or .zip will\n                            be examined and added to the jxe\n
J2JX061=Ahead-of-time compilation options\:\n  -[no]precompile           [do not] mark all methods for precompilation\n  -[no]precompileMethod xxx [do not] mark named methods for precompilation\n  -[no]compileAheadOfTime   compile marked method ahead of time\n  -precompileTarget xxx     generate jxe for target architecture and OS xxx\n  -precompileOptions xxx    pass xxx to the precompilation engine\n  -[no]precompileResolve    [do not] attempt to resolve external references during precompilation\n  -[no]stripBytecode        [do not] strip bytecode for aot compiled methods\n
J2JX060=\  -j2se                     use this option when using jar2jxe in a J2SE environment\n
J9GC029=Option too large\: '%s'
J9GC028=Malformed option\: '%s'
J9GC027=-Xverbosegclog failed to allocate internal structures
J9GC026=Sum of %1$s and %2$s
J9GC025=Sum of %1$s and %2$s too large for heap
J2JX059=\  -[no]tools                the tools directory is [not] added to the list of extension directories
J9GC024=Sum of %1$s and %2$s must equal %3$s
J2JX058=\  -padJxe                   pad the jxe at end with xxx extra bytes
J9GC023=Sum of %1$s and %2$s too large for %3$s
J2JX057=\  -[no]segmented            [do not] generate multiple segmented jxes\n  -maxSegmentSize xxx       max size for any segmented jxe (hex number)\n  -maxSegmentSize seg\=xxx   max size for specific segmented jxe (hex number)\n  -locate xxx               locate the image to address xxx (hex number)\n  -locate seg\=xxx           locate the image of a segment to hex address xxx
J9GC022=%1$s must equal %2$s
J2JX056=\  -fileExtension xxx        treat files ending with .xxx as .jar files
J9GC021=%s too large for heap
J2JX055=\  -vmOption xxx             use a vmOption xxx when running jxe
J9GC020=%1$s too large for %2$s
J2JX054=\  -versionName xxx          set version name of jxe to xxx
J2JX053=\  -description xxx          set description of jxe to xxx
J2JX052=\  -uuid xxx                 set the UUID of the jxe to xxx
J2JX051=\  -D xxx\=yyy                set system property xxx to yyy
J2JX050=\  -startupClass xxx         set startup class to xxx\n  -noStartupClass           indicate the jxe doesn't have a startup class
J9GC019=%1$s too small for %2$s
J9GC018=%1$s too small, must be at least %2$zu %3$sbytes
J9GC017=Failed to allocate immortal memory space
J9GC016=Failed to allocate survivor segment in default memory space
J9GC015=Failed to allocate default memory space
J2JX049=\  -srcDir xxx               include all files in directory tree xxx
J9GC014=Failed to allocate VM class memory segments
J2JX048=\  -outputFormat xxx         set the output format to xxx (c, bin, or jar)
J9GC013=Failed to allocate VM object memory segments
J2JX047=\  -o xxx                    set base output filename to xxx
J9GC012=Failed to allocate VM memory segments
J2JX046=\  -be                       generate big endian output\n  -le                       generate little endian output
J9GC011=Failed to initialize pool of memoryspaces
J2JX045=\  -version                  print out the version of this program
J9GC010=Failed to initialize finalizer management
J2JX044=\  -[no]profile              [do not] generate a .prf file for profiling
J2JX042=\  -[no]verify               [do not] verify the class file format
J2JX041=\  -q                        quiet mode\n  -[no]logo                 [do not] print copyright message\n  -verbose                  verbose mode
J2JX040=Usage\:\t%s [options] classfile(s)\n\n[options]\n  -help, -?                 print usage
VERB015=shared class cache size
J9TI020=Gets the OS thread ID from a jthread
VERB014=memory maximum
VERB013=ROM class segment increment
VERB012=RAM class segment increment
VERB011=java thread stack size
VERB010=java thread stack maximum size
J9GC009=Failed to initialize mutex for GC statistics
J9GC008=Failed to initialize module extensions
J9GC007=Failed to initialize, parsing command line
J9GC006=Failed to initialize, out of memory
J9GC005=Failed to initialize
J2JX039=IBM is a registered trademark of IBM Corp.\nJava and all Java-based marks and logos are trademarks or registered\ntrademarks of Sun Microsystems, Inc.
J9GC004=Failed to instantiate global garbage collector
J2JX038=Licensed Materials - Property of IBM
J9GC003=Failed to instantiate task dispatcher
J2JX037=Could not compile method\: %2$.*1$s/%4$.*3$s%6$.*5$s
J9GC002=Failed to instantiate heap.  %1$zu%2$s requested
J2JX036=Target\: %s\n
J9GC001=Failed to instantiate heap
J2JX035=(c) Copyright IBM Corp. 1991, 2005  All Rights Reserved
J9GC000=Internal Error, Out of Memory
J2JX034=J9 Java(TM) JAR to JXE, Version %s
J2JX033=Internal Error\: failed the properly build the Error'd rom class
J9TI019=Sets notification mode for extended events, allowing thread-level selectivity
J2JX032=Unbalanced quotes in parameter list
J9TI018=Sets a method for selective entry/exit notification.
J2JX031=finished reading JAR file\: %s
J9TI017=Controls various VM and compiling options. 
J2JX030=Error reading %1$s from %2$s
J9TI016=Allow inlining in the presence of method enter/exit events (resulting in possibly inaccurate reporting of enter/exit)
J9TI015=Request a Java Lock Monitor (JLM) dump.
VERB009=java thread stack increment
J9TI014=Controls Java Lock Monitor (JLM) (COM_IBM_JLM_START, COM_IBM_JLM_START_TIME_STAMP, COM_IBM_JLM_STOP, COM_IBM_JLM_STOP_TIME_STAMP).
VERB008=java thread stack initial size
J9TI013=Allows callbacks for instrumentable allocates (those not reporteed by VMObjectAlloc).
VERB007=OS thread stack size
J9TI012=Add a dynamic -Xdump option
VERB006=Failed to initialize
J9TI011=Add a dynamic -Xtrace option
VERB005=Error\: -Xverbosegclog missing filename
J9TI010=Method entry with extended information about method type.
VERB004=Error\: -Xverbosegclog number of cycles must be greater than 0
VERB003=Error\: -Xverbosegclog number of files must be greater than 0
VERB002=Verbose stack\: maximum stack use was %1$zd/%2$zd bytes on Java/C stacks
VERB001=(unnamed thread)
VERB000=Verbose stack\: "%2$.*1$s" used %3$zd/%4$zd bytes on Java/C stacks
J2JX029=processing\: %s
J2JX028=Error reading entry from %s
J2JX027=Could not open or read %s
J2JX026=segment %d could not fit within the required maximum segment size
J2JX025=Attempted to add duplicate class to JXE %s
J2JX024=added class file\: %s
J2JX023=attempting to add class file\: %s
J9TI009=Indicates the end of a JIT compilation phase. (Not callback safe)
J2JX022=%s is invalid
J9TI008=Indicates the start of a JIT compilation phase. (Not callback safe)
J2JX021=Could not load %1$s\: %2$s
J9TI007=Get the current set of extended capabilities via capabilities_ptr.
J2JX020=growing ncpRef [%1$x] from %2$u entries to %3$u entries
J9TI006=Relinquish the extended capabilities from capabilities_ptr.
J9TI005=Add the new extended capabilities from capabilities_ptr.
J9TI004=Returns via the capabilities_ptr the extended capabilities available at this time.
J9TI003=Agent_OnLoad failed for library %s
J9TI002=Agent_OnLoad not found in library %s
J9TI001=Agent library %1$s could not be opened (%2$s)
J9TI000=Out of memory attempting to load agent library %s
J2JX019=growing buffer [%1$x] from %2$u to %3$u
J2JX018=Successfully created %s
J2JX017=Failed to write data to file\: %s
J2JX016=Failed to create/clear file\: %s
J2JX015=Unknown error code\: %d
J2JX014=AOT initialization failed
J2JX013=Internal Error\: Endian flip failed
JDTS000=Listening for transport dt_socket at address\: %d
J2JX012=Supplied UUID is invalid
J2JX011=Internal Error\: ZIP Entry not closed
J2JX010=Internal Error\: read failed
J9RI021=jvmri->RunDumpRoutine not supported.
J9RI020=jvmri->CreateThread unable to allocate private monitor
J2JX009=Internal Error\: seek failed
J2JX008=Internal Error\: no entries
J2JX007=Internal Error\: Duplicate entry
J2JX006=Out of memory
J2JX005=Internal Error\: size mismatch
